import { compressRLE } from './compressRLE.js';
import fs from 'fs';

export const compressFileRLE = (inputFilePath, outputFilePath) => {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if (!fs.existsSync(inputFilePath)) {
      throw new Error('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    // 2. –ß–∏—Ç–∞–µ–º –∏ —á–∏—Å—Ç–∏–º –¥–∞–Ω–Ω—ã–µ
    let data = fs.readFileSync(inputFilePath, 'utf-8');
    data = data.replace(/^\uFEFF/, '').trim(); // —É–±–∏—Ä–∞–µ–º BOM –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã

    if (!data) {
      throw new Error('–§–∞–π–ª –ø—É—Å—Ç');
    }

    // 3. –°–∂–∏–º–∞–µ–º
    const compressedData = compressRLE(data);

    // 4. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
    fs.writeFileSync(outputFilePath, compressedData, 'utf-8');

    console.log(`‚úÖ –§–∞–π–ª —Å–∂–∞—Ç –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ ${outputFilePath}`);
    console.log(`üìä –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${data.length} –±–∞–π—Ç`);
    console.log(`üìä –°–∂–∞—Ç—ã–π —Ä–∞–∑–º–µ—Ä: ${compressedData.length} –±–∞–π—Ç`);
    console.log(
      `üìà –°—Ç–µ–ø–µ–Ω—å —Å–∂–∞—Ç–∏—è: ${Math.round((1 - compressedData.length / data.length) * 100)}%`
    );
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
  }
};
