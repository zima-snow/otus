import { decompressRLEString } from './decompressRLE.js';
import fs from 'fs';
import path from 'path';

export const decompressFileRLE = (inputFilePath, outputFilePath) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    if (!fs.existsSync(inputFilePath)) {
      throw new Error(`–§–∞–π–ª ${inputFilePath} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    // –ß—Ç–µ–Ω–∏–µ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º BOM –∏ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤
    let compressedData = fs
      .readFileSync(inputFilePath, 'utf-8')
      .replace(/^\uFEFF/, '') // –£–¥–∞–ª–µ–Ω–∏–µ BOM
      .trim(); // –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–∏—Ö –ø—Ä–æ–±–µ–ª–æ–≤

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!compressedData) {
      throw new Error('–§–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã');
    }

    // –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    let decompressedData;
    try {
      decompressedData = decompressRLEString(compressedData);
    } catch (err) {
      throw new Error(`–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏: ${err.message}`);
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–∏
    const outputDir = path.dirname(outputFilePath);
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir, { recursive: true });
    }

    // –ó–∞–ø–∏—Å—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    fs.writeFileSync(outputFilePath, decompressedData, 'utf-8');

    // –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    const compressionRatio = Math.round(
      (1 - compressedData.length / decompressedData.length) * 100
    );

    console.log(`‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω`);
    console.log(`üìÇ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: ${inputFilePath}`);
    console.log(`üìÇ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: ${outputFilePath}`);
    console.log(`üìä –†–∞–∑–º–µ—Ä —Å–∂–∞—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${compressedData.length} –±–∞–π—Ç`);
    console.log(
      `üìä –†–∞–∑–º–µ—Ä —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${decompressedData.length} –±–∞–π—Ç`
    );
    console.log(`üìà –°—Ç–µ–ø–µ–Ω—å —Å–∂–∞—Ç–∏—è: ${compressionRatio}%`);
  } catch (err) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err.message);
    process.exitCode = 1; // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∞ –æ—à–∏–±–∫–∏
  }
};
